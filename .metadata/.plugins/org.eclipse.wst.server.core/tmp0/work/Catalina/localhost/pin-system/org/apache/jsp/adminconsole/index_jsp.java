/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2024-02-25 17:19:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.adminconsole;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.util.List;
import com.fitto.gui.utils.RESTClient;
import com.fitto.realm.FittoGenericPrinciple;
import java.util.Map;
import com.fitto.gui.utils.SessionManagementUtils;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.fitto.gui.utils.SessionManagementUtils");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("com.fitto.gui.utils.RESTClient");
    _jspx_imports_classes.add("com.fitto.realm.FittoGenericPrinciple");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 HttpSession httpSession =request.getSession(false);
    System.out.println(" From JSP"+httpSession.isNew());

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write(" <meta charset=\"utf-8\">  \r\n");
      out.write(" <!--  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> -->\r\n");
      out.write(" <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write(" <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("  \r\n");
      out.write("\t<link rel=\"shortcut icon\" type=\"image/png\" href=\"images/favicon.ico\" />\r\n");
      out.write("\t<!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"> -->\r\n");
      out.write("\t\r\n");
      out.write(" \t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\r\n");
      out.write(" \r\n");
      out.write("\t<link href=\"./css/jquery.multiselect.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"./css/alertify.core.css\" />\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"./css/alertify.default.css\" id=\"toggleCSS\" />\t\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("\t<!--  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script> --> \r\n");
      out.write("\t\r\n");
      out.write(" <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"./js/ajaxutil.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\t<script src=\"./js/multiSelect.js\"></script>\r\n");
      out.write("\t<script src = \"./js/alertify.js\"></script>  \r\n");
      out.write("\t<script src=\"./js/alertify.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("<script type=\"text/javascript\" language=\"javascript\">\r\n");
      out.write("\t if (window.performance && window.performance.navigation.type == window.performance.navigation.TYPE_BACK_FORWARD) {\r\n");
      out.write("\t\t/* url = document.URL\r\n");
      out.write("\t\talert(url);\r\n");
      out.write("\t\tu = document.URL.lastIndexOf('/pin-system')\r\n");
      out.write("\t\ts = document.URL.substring(0, u)\r\n");
      out.write("\t\tif(s.indexOf('/pin-system') >-1)\r\n");
      out.write("\t\t\ts += '/logout.jsp';\r\n");
      out.write("\t\telse\r\n");
      out.write("\t\ts += '/pin-system/logout.jsp';\r\n");
      out.write("\t\twindow.location = s */\r\n");
      out.write("\t\ts = '../logout.jsp';\r\n");
      out.write("\t\twindow.location = s\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<title>PIN-System</title>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");

FittoGenericPrinciple principal = (FittoGenericPrinciple)request.getUserPrincipal();
String[] roles = null;
String orgId = null;
if(principal != null) {
	Map<String, String> respMap = principal.getApplicationData();
	roles = principal.getRoles();
	if(roles != null && roles.length > 0)
		session.setAttribute("role", roles[0]);
	if(respMap != null) {
		session.setAttribute("username", respMap.get("username"));
		session.setAttribute("createdRoleId",   respMap.get("createdRoleId"));
		session.setAttribute("userId",   respMap.get("userId"));

	}
} 

SessionManagementUtils ssUtil=new SessionManagementUtils();
ssUtil.registerUserSession(session.getAttribute("username").toString(), request.getSession(false));

String apiKey = System.getenv("API_KEY");
//String restApiUrl = System.getenv("REST_API_CORP_ADMIN_URL");
//String restApiUrlAdmin = System.getenv("REST_API_ADMIN_URL");

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div id=\"wrapper1\">\r\n");
      out.write("\t   \r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t    \r\n");
      out.write("\t    <input type=\"hidden\" id=\"sessionUserRole\" value=\"");
      out.print(session.getAttribute("role"));
      out.write("\"/>\r\n");
      out.write("\t    <input type=\"hidden\" id=\"sessionUsername\" value=\"");
      out.print(session.getAttribute("username"));
      out.write("\"/>\r\n");
      out.write("\t    <input type=\"hidden\" id=\"sessionUserRoleId\" value=\"");
      out.print(session.getAttribute("createdRoleId"));
      out.write("\"/>\r\n");
      out.write("\t    <input type=\"hidden\" id=\"sessionUserId\" value=\"");
      out.print(session.getAttribute("userId"));
      out.write("\"/>\r\n");
      out.write("\t    <input type=\"hidden\" id=\"apiKeySession\"  value=\"");
      out.print(apiKey);
      out.write("\"/>\r\n");
      out.write("\t\r\n");
      out.write("\t    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "headerMenu.jsp", out, false);
      out.write("\r\n");
      out.write("\t    ");
      out.write("\r\n");
      out.write("\t    <div> \r\n");
      out.write("\t  \t<!-- VAPT Issue Fix  -->  \r\n");
      out.write("\t\t\t");
	if (roles == null) { 
      out.write("\r\n");
      out.write("\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "error.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t");
 } else if (request.getParameter("target") != null && request.getParameter("target").trim().length() > 0) {
					System.out.println(request.getParameter("target"));
					if(!request.getParameter("target").equals("customerMaster")
							&& !request.getParameter("target").equals("sourceMaster")
							&& !request.getParameter("target").equals("resourceMaster")
							&& !request.getParameter("target").equals("vendorMaster")
							&& !request.getParameter("target").equals("designationMaster")
							&& !request.getParameter("target").equals("pinAllocation")
							&& !request.getParameter("target").equals("closePin")
							&& !request.getParameter("target").equals("changeRequest")
							&& !request.getParameter("target").equals("resourceListReport")
							&& !request.getParameter("target").equals("resourceAllocationReport")
							&& !request.getParameter("target").equals("billableReport")) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "error.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 } else if(request.getParameter("target").equals("resourceListReport") 
							&& (!roles[0].equalsIgnoreCase("DH") && !roles[0].equalsIgnoreCase("HR") 
									&& !roles[0].equalsIgnoreCase("PMO") && !roles[0].equalsIgnoreCase("Finance"))) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "error.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 } else if(request.getParameter("target").equals("resourceAllocationReport") 
							&& (!roles[0].equalsIgnoreCase("DH") && !roles[0].equalsIgnoreCase("HR") 
									&& !roles[0].equalsIgnoreCase("PMO") && !roles[0].equalsIgnoreCase("Finance"))) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "error.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 } else if(request.getParameter("target").equals("billableReport") 
							&& (!roles[0].equalsIgnoreCase("DH"))) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "error.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 } else {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, request.getParameter("target") + ".jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 }
			
				} else {
					this.getServletContext().getRequestDispatcher("/adminconsole/index.jsp?target=resourceMaster").forward(request, response);
			
      out.write("\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
